#include <Input/Keyboard.h>
#include <Input/KeyboardState.h>

#include <GL/glfw.h>

int XnaToGlfw[] = {
	Keys_None,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	GLFW_KEY_BACKSPACE, // Keys_Back = 8,
	GLFW_KEY_TAB, // Keys_Tab = 9,
	0,
	0,
	0,
	GLFW_KEY_ENTER, // Keys_Enter = 13,
	0,
	0,
	0,
	0,
	0,
	GLFW_KEY_PAUSE, // Keys_Pause = 19,
	GLFW_KEY_CAPS_LOCK, // Keys_CapsLock = 20,
	0, // Keys_Kana = 21,
	0,
	0,
	0,
	0, // Keys_Kanji = 25,
	0,
	GLFW_KEY_ESC, // Keys_Escape = 27,
	0, // Keys_ImeConvert = 28,
	0, // Keys_ImeNoConvert = 29,
	0,
	0,
	GLFW_KEY_SPACE, // Keys_Space = 32,
	GLFW_KEY_PAGEUP, // Keys_PageUp = 33,
	GLFW_KEY_PAGEDOWN, // Keys_PageDown = 34,
	GLFW_KEY_END, // Keys_End = 35,
	GLFW_KEY_HOME, // Keys_Home = 36,
	GLFW_KEY_LEFT, // Keys_Left = 37,
	GLFW_KEY_UP, // Keys_Up = 38,
	GLFW_KEY_RIGHT, // Keys_Right = 39,
	GLFW_KEY_DOWN, // Keys_Down = 40,
	0, // Keys_Select = 41,
	0, // Keys_Print = 42,
	0, // Keys_Execute = 43,
	0, // Keys_PrintScreen = 44,
	GLFW_KEY_INSERT, // Keys_Insert = 45,
	GLFW_KEY_DEL, // Keys_Delete = 46,
	0, // Keys_Help = 47,
	Keys_D0, // Keys_D0 = 48,
	Keys_D1, // Keys_D1 = 49,
	Keys_D2, // Keys_D2 = 50,
	Keys_D3, // Keys_D3 = 51,
	Keys_D4, // Keys_D4 = 52,
	Keys_D5, // Keys_D5 = 53,
	Keys_D6, // Keys_D6 = 54,
	Keys_D7, // Keys_D7 = 55,
	Keys_D8, // Keys_D8 = 56,
	Keys_D9, // Keys_D9 = 57,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	Keys_A, // Keys_A = 65,
	Keys_B, // Keys_B = 66,
	Keys_C, // Keys_C = 67,
	Keys_D, // Keys_D = 68,
	Keys_E, // Keys_E = 69,
	Keys_F, // Keys_F = 70,
	Keys_G, // Keys_G = 71,
	Keys_H, // Keys_H = 72,
	Keys_I, // Keys_I = 73,
	Keys_J, // Keys_J = 74,
	Keys_K, // Keys_K = 75,
	Keys_L, // Keys_L = 76,
	Keys_M, // Keys_M = 77,
	Keys_N, // Keys_N = 78,
	Keys_O, // Keys_O = 79,
	Keys_P, // Keys_P = 80,
	Keys_Q, // Keys_Q = 81,
	Keys_R, // Keys_R = 82,
	Keys_S, // Keys_S = 83,
	Keys_T, // Keys_T = 84,
	Keys_U, // Keys_U = 85,
	Keys_V, // Keys_V = 86,
	Keys_W, // Keys_W = 87,
	Keys_X, // Keys_X = 88,
	Keys_Y, // Keys_Y = 89,
	Keys_Z, // Keys_Z = 90,
	GLFW_KEY_LSUPER, // Keys_LeftWindows = 91,
	GLFW_KEY_RSUPER, // Keys_RightWindows = 92,
	0, // Keys_Apps = 93,
	0,
	0, // Keys_Sleep = 95,
	GLFW_KEY_KP_0, // Keys_NumPad0 = 96,
	GLFW_KEY_KP_1, // Keys_NumPad1 = 97,
	GLFW_KEY_KP_2, // Keys_NumPad2 = 98,
	GLFW_KEY_KP_3, // Keys_NumPad3 = 99,
	GLFW_KEY_KP_4, // Keys_NumPad4 = 100,
	GLFW_KEY_KP_5, // Keys_NumPad5 = 101,
	GLFW_KEY_KP_6, // Keys_NumPad6 = 102,
	GLFW_KEY_KP_7, // Keys_NumPad7 = 103,
	GLFW_KEY_KP_8, // Keys_NumPad8 = 104,
	GLFW_KEY_KP_9, // Keys_NumPad9 = 105,
	GLFW_KEY_KP_MULTIPLY, // Keys_Multiply = 106,
	GLFW_KEY_KP_ADD, // Keys_Add = 107,
	GLFW_KEY_KP_ENTER, // Keys_Separator = 108,
	GLFW_KEY_KP_SUBTRACT, // Keys_Subtract = 109,
	GLFW_KEY_KP_DECIMAL, // Keys_Decimal = 110,
	GLFW_KEY_KP_DIVIDE, // Keys_Divide = 111,
	GLFW_KEY_F1, // Keys_F1 = 112,
	GLFW_KEY_F2, // Keys_F2 = 113,
	GLFW_KEY_F3, // Keys_F3 = 114,
	GLFW_KEY_F4, // Keys_F4 = 115,
	GLFW_KEY_F5, // Keys_F5 = 116,
	GLFW_KEY_F6, // Keys_F6 = 117,
	GLFW_KEY_F7, // Keys_F7 = 118,
	GLFW_KEY_F8, // Keys_F8 = 119,
	GLFW_KEY_F9, // Keys_F9 = 120,
	GLFW_KEY_F10, // Keys_F10 = 121,
	GLFW_KEY_F11, // Keys_F11 = 122,
	GLFW_KEY_F12, // Keys_F12 = 123,
	GLFW_KEY_F13, // Keys_F13 = 124,
	GLFW_KEY_F14, // Keys_F14 = 125,
	GLFW_KEY_F15, // Keys_F15 = 126,
	GLFW_KEY_F16, // Keys_F16 = 127,
	GLFW_KEY_F17, // Keys_F17 = 128,
	GLFW_KEY_F18, // Keys_F18 = 129,
	GLFW_KEY_F19, // Keys_F19 = 130,
	GLFW_KEY_F20, // Keys_F20 = 131,
	GLFW_KEY_F21, // Keys_F21 = 132,
	GLFW_KEY_F22, // Keys_F22 = 133,
	GLFW_KEY_F23, // Keys_F23 = 134,
	GLFW_KEY_F24, // Keys_F24 = 135,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	GLFW_KEY_KP_NUM_LOCK, // Keys_NumLock = 144,
	GLFW_KEY_SCROLL_LOCK, // Keys_Scroll = 145,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	GLFW_KEY_LSHIFT, // Keys_LeftShift = 160,
	GLFW_KEY_RSHIFT, // Keys_RightShift = 161,
	GLFW_KEY_LCTRL, // Keys_LeftControl = 162,
	GLFW_KEY_RCTRL, // Keys_RightControl = 163,
	GLFW_KEY_LALT, // Keys_LeftAlt = 164,
	GLFW_KEY_RALT, // Keys_RightAlt = 165,
	0, // Keys_BrowserBack = 166,
	0, // Keys_BrowserForward = 167,
	0, // Keys_BrowserRefresh = 168,
	0, // Keys_BrowserStop = 169,
	0, // Keys_BrowserSearch = 170,
	0, // Keys_BrowserFavorites = 171,
	0, // Keys_BrowserHome = 172,
	0, // Keys_VolumeMute = 173,
	0, // Keys_VolumeDown = 174,
	0, // Keys_VolumeUp = 175,
	0, // Keys_MediaNextTrack = 176,
	0, // Keys_MediaPreviousTrack = 177,
	0, // Keys_MediaStop = 178,
	0, // Keys_MediaPlayPause = 179,
	0, // Keys_LaunchMail = 180,
	0, // Keys_SelectMedia = 181,
	0, // Keys_LaunchApplication1 = 182,
	0, // Keys_LaunchApplication2 = 183,
	0,
	0,
	';', // Keys_OemSemicolon = 186,
	'+', // Keys_OemPlus = 187,
	',', // Keys_OemComma = 188,
	'-', // Keys_OemMinus = 189,
	'.', // Keys_OemPeriod = 190,
	'?', // Keys_OemQuestion = 191,
	'~', // Keys_OemTilde = 192,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0, // Keys_ChatPadGreen = 202,
	0, // Keys_ChatPadOrange = 203,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	'[', // Keys_OemOpenBrackets = 219,
	'|', // Keys_OemPipe = 220,
	']', // Keys_OemCloseBrackets = 221,
	'"', // Keys_OemQuotes = 222,
	0, // Keys_Oem8 = 223,
	0,
	0,
	'\\', // Keys_OemBackslash = 226,
	0,
	0,
	0, // Keys_ProcessKey = 229,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0, // Keys_OemCopy = 242,
	0, // Keys_OemAuto = 243,
	0, // Keys_OemEnlW = 244,
	0,
	0, // Keys_Attn = 246,
	0, // Keys_Crsel = 247,
	0, // Keys_Exsel = 248,
	0, // Keys_EraseEof = 249,
	0, // Keys_Play = 250,
	0, // Keys_Zoom = 251,
	0,
	0, // Keys_Pa1 = 253,
	0, // Keys_OemClear = 254,
	0
};

int GlfwToXna[ GLFW_KEY_LAST ];

KeyboardState Keyboard::currentState_;

void Keyboard::Update()
{
	for( int i = 0; i < 256; ++i )
		currentState_.keyState_[ i ] = XnaToGlfw[ i ] ? glfwGetKey( XnaToGlfw[ i ] ) == GLFW_PRESS : false;
}

KeyboardState Keyboard::GetState()
{
	return currentState_;
}
